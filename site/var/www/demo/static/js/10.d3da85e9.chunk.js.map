{"version":3,"sources":["config/GlobalConfig.js","helpers/helper.js","store/form/actions.js","components/TextsComponents/Title.js","components/TextsComponents/Text.js","components/TextsComponents/Color.js","components/TextsComponents/Label.js","components/TextsComponents/Time.js","components/TextsComponents/LabelBox.js","components/TextsComponents/TitleSection.js","components/TextsComponents/Error.js","store/cart/actions.js","components/CardFinish/Card.js","views/finishCart/components/ScheduleOrder/index.js","views/finishCart/components/ChoosePhone/index.js","helpers/functions.js","views/finishCart/components/ClientForm/index.js","views/finishCart/components/AddressForm/index.js","views/finishCart/components/Payment/Upload.js","views/finishCart/components/Payment/Image.js","views/finishCart/components/Payment/RemoveIcon.js","views/finishCart/components/Payment/index.js","views/finishCart/components/OrderSumary/Cart.js","views/finishCart/components/OrderSumary/index.js","views/finishCart/Finish.js"],"names":["process","NODE_ENV","REACT_APP_PROD_URL","REACT_APP_DEV_URL","baseURL","Http","axios","create","apiFetchGet","endpoint","a","body","get","params","response","apiFecthPost","post","apiFetchWhatsApp","solutek","headers","data","Swal","fire","icon","title","text","customClass","container","addFormAction","form","type","types","ADD_INFO_FORM","payload","clearFormAction","CLEAR_FORM","TitleComponent","size","children","style","fontSize","color","fontWeight","marginBottom","TextComponent","ColorComponent","active","LabelComponent","pointerEvents","TimeComponent","LabelBoxComponent","padding","backgroundColor","borderRadius","TitleSectionComponent","background","ErrorComponent","addToCartAction","ADD_PRODUCT_CART","removeToCartAction","REMOVE_PRODUCT_CART","clearCartAction","CLEAR_CART","CardComponent","setStep","countSteps","step","validation","finish","showAlert","getStartDate","error","Alert","prev","block","width","onClick","disabled","nextStep","ScheduleOrderComponent","dispatch","useDispatch","useSelector","formSelector","check_agendamento","dh_agendamento","produtos_pedidos","useState","setError","horarios","setHorarios","setLoading","undefined","funcionando","setFuncionando","useEffect","getFuncionamento","localStorage","getItem","horario_funcionamento","rows","isDateScheduleable","day","date","faixa","isFaixa","initialTime","parse","finalTime","start","addHours","end","isBefore","addDays","Date","interval","isInInterval","isWithinInterval","dh_start_atendimento","tipo_atendimento","protocolo","moment","unix","Card","faixa_1","isPossibleToSchedule","getDayAbreviation","getDay","errorAgen","forEach","produto","info","agendamento","console","log","descricao","some","item","validIntervals","reduce","acc","format","xs","lg","shape","checked","onChange","e","target","rest","row","placeholder","value","min","ChoosePhoneComponent","telefone_cliente","mask","inputProps","formatDate","cDate","cDay","getDate","CMonth","getMonth","cYear","getFullYear","cHour","getHours","cMin","getMinutes","ClientFormComponent","empresa","tipo_telefone","nome_cliente","replace","length","historico_atendimentos","endereco","numero","bairro","cep","cidade","uf","complemento","getUser","nome_fantasia","onKeyPress","evt","tecla","window","event","keyCode","alert","preventDefault","teclas","AdressFormComponent","tipo_retirada","taxa_de_entrega","id","taxas","setTaxas","options","label","ufs","logradouro","tipo_logradouro","map","taxa","bairro_cidade_st","valor","toFixed","tempo_entrega","coordenadas","getTaxasDeEntregas","trim","find","option","JSON","maxMenuHeight","height","Map","center","coordinates","centroid","polygon","lat","lng","geometry","longitude","getCenter","zoom","zoomControl","margin","zIndex","TileLayer","attribution","url","Polygon","positions","UploadComponent","isDragActive","getRootProps","outline","cursor","transition","display","alignItems","justifyContent","border","opacity","ImageComponent","top","right","RemoveComponent","removeImage","position","PaymentComponent","tipo_pagamento","troco","tipo_cartao","image","formas","setFormas","linksPagamento","setLinksPagamento","preview","setPreview","imageTest","setImageT","id_comprovante","reader","FileReader","readAsDataURL","onloadend","result","getPreview","onDrop","useCallback","images","getFormasPagamentoCartao","cart_visa","cart_master_card","cart_elo","cart_sodexo","cart_hipercard","cart_american_express","cart_diners_club","cart_alelo","cart_ticket","cart_amex","cart_vr","cart_cabal","keys","Object","key","filter","getLinkPagamento","useDropzone","getInputProps","handleUpload","formData","FormData","append","url_comprovante","maskedvalue","floatvalue","precision","prefix","includes","index","tipo_link","url_pagamento","usuario_pagamento","senha_pagamento","cb_nome_banco","cb_numero_banco","cb_cnpj_cpf","cb_agencia","cb_conta","cd_digito","cb_favorecido","cb_pix","borderBottom","href","marginTop","Image","name","backgroundSize","src","Upload","CartComponent","useHistory","getSubTotal","soma","quantity","sub_id","avulso","adicional","textAlign","porcao_produto","nome_produto","paddingLeft","borderTop","borderColor","OrderSumaryComponent","history","tempo_producao","nota_fiscal","cpf_cnpj_nfs","observacoes","tempo_adicional","sendWhatsApp","produtos","message","getTotal","celular","credentials","email","token","idapp","id_empresa","Number","id_user","user","push","errors","estimateTime","addMinutes","createAttendance","className","Cart","FinishComponent","steps","component","ScheduleOrder","ChoosePhone","ClientForm","AddresForm","Payment","OrderSumary","Component","getComponent","bottom","left","goBack"],"mappings":"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","file":"static/js/10.d3da85e9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst { NODE_ENV, REACT_APP_PROD_URL, REACT_APP_DEV_URL } = process.env;\r\nexport const baseURL = NODE_ENV === 'production'\r\n? REACT_APP_PROD_URL\r\n: REACT_APP_DEV_URL;\r\n\r\nconst Http = axios.create({ baseURL });\r\n\r\nexport default Http;\r\n","import solutek from 'axios';\r\nimport axios from '../config/GlobalConfig';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const apiFetchGet = async (endpoint, body = null) => {\r\n  const response = await axios.get(`${endpoint}`, {\r\n    params: body\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const apiFecthPost = async (endpoint, body) => {\r\n  const response = await axios.post(`${endpoint}`, body);\r\n\r\n  return response;\r\n};\r\n\r\nexport const apiFetchWhatsApp = async (body) => {\r\n  const response = await solutek.post(`https://www.solutek.online/api/whatsapp/gateway/json/enviar`, body, {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n\r\n  if (!response.data)\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Atenção...',\r\n      text: 'Ocorreu um erro ao enviar as informações para o whatsapp!',\r\n      customClass: {\r\n        container: 'test'\r\n      },\r\n    });\r\n};\r\n","import types from './constants';\r\n\r\nexport const addFormAction = (form) => {\r\n  return {\r\n    type: types.ADD_INFO_FORM,\r\n    payload: form\r\n  };\r\n};\r\n\r\nexport const clearFormAction = () => {\r\n  return {\r\n    type: types.CLEAR_FORM\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nconst TitleComponent = ({ size = null, children }) => {\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: size ? size : '14px',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        marginBottom: '10px'\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TitleComponent;\r\n","import React from 'react';\r\n\r\nconst TextComponent = ({ children }) => {\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: '12px'\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TextComponent;\r\n","import React from 'react';\r\n\r\nconst ColorComponent = ({ active, text }) => {\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        color: active ? 'green' : 'red'\r\n      }}\r\n    >\r\n      {text}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ColorComponent;\r\n","import React from 'react';\r\n\r\nconst LabelComponent = ({ text }) => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        pointerEvents: 'none'\r\n      }}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelComponent;\r\n","import React from 'react';\r\n\r\nconst TimeComponent = ({ children }) => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: '14px'\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeComponent;\r\n","import React from 'react';\r\n\r\nconst LabelBoxComponent = ({ active, text }) => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: '5px',\r\n        color: 'white',\r\n        backgroundColor: active ? 'green' : 'red',\r\n        fontSize: '14px',\r\n        fontWeight: 'bold',\r\n        borderRadius: '3px'\r\n      }}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelBoxComponent;\r\n","import React from 'react';\r\n\r\nconst TitleSectionComponent = ({ children }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                background: '#f0f0f7',\r\n                padding: '10px 15px',\r\n                fontSize: '18px'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TitleSectionComponent;","import React from 'react';\r\n\r\nconst ErrorComponent = ({ text }) => {\r\n\r\n    return (\r\n        <span\r\n            style={{\r\n                color: 'red'\r\n            }}\r\n        >\r\n            {text}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default ErrorComponent;","import types from './constants';\r\n\r\nexport const addToCartAction = () => {  return { type: types.ADD_PRODUCT_CART } };\r\nexport const removeToCartAction = () => { return { type: types.REMOVE_PRODUCT_CART } };\r\nexport const clearCartAction = () => { return { type: types.CLEAR_CART } };","import React, { useEffect } from 'react';\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardHeader,\r\n    CCardTitle,\r\n    CCardBody,\r\n    CCardFooter\r\n} from '@coreui/react';\r\nimport Alert from 'sweetalert2';\r\n\r\nconst CardComponent = ({ title, setStep, countSteps, step, children, validation, finish, showAlert = false, getStartDate }) => {\r\n\r\n    async function nextStep() {\r\n        if (finish)\r\n            return finish();\r\n        const error = await validation();\r\n        if (error)\r\n            return showAlert && Alert.fire('Erro', error, 'error');\r\n        if(step === 0) getStartDate();\r\n        if (step < (countSteps-1))\r\n            setStep(prev => prev + 1);\r\n    };\r\n\r\n    function backStep() {\r\n        setStep(prev => prev - 1);\r\n    };\r\n\r\n\r\n    return (\r\n        <CCard\r\n            style={{\r\n                marginBottom: '80px'\r\n            }}\r\n        >\r\n            <CCardHeader>\r\n                <CCardTitle>{title}</CCardTitle>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                {children}\r\n            </CCardBody>\r\n            <CCardFooter>\r\n                <CButton\r\n                    block\r\n                    color=\"danger\"\r\n                    style={{\r\n                        width: '100%'\r\n                    }}\r\n                    onClick={() => backStep()}\r\n                    disabled={step === 0}\r\n                >\r\n                    Voltar\r\n                </CButton>\r\n                <CButton\r\n                    block\r\n                    color=\"info\"\r\n                    style={{\r\n                        width: '100%'\r\n                    }}\r\n                    onClick={() => nextStep()}\r\n                >\r\n                    {step === (countSteps - 1) ? 'Finalizar' : 'Próximo'}\r\n                </CButton>\r\n            </CCardFooter>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { format, parse, addHours, addDays, isWithinInterval, isBefore } from 'date-fns';\r\n\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nimport { apiFetchGet } from '../../../../helpers/helper';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput,\r\n    CSwitch\r\n} from '@coreui/react';\r\nimport { Error } from '../../../../components/TextsComponents';\r\n\r\nimport Card from '../../../../components/CardFinish/Card';\r\n\r\nconst ScheduleOrderComponent = ({ title, setStep, countSteps, step }) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { check_agendamento, dh_agendamento, produtos_pedidos } = form;\r\n    const [error, setError] = useState(false);\r\n    const [horarios, setHorarios] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [details, showDetails] = useState(false);\r\n    const [funcionando, setFuncionando] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        getFuncionamento();\r\n    }, []);\r\n\r\n    function getDayAbreviation(day) {\r\n        switch (day) {\r\n            case 0:\r\n                return 'dom';\r\n            case 1:\r\n                return 'seg';\r\n            case 2:\r\n                return 'ter';\r\n            case 3:\r\n                return 'qua';\r\n            case 4:\r\n                return 'qui';\r\n            case 5:\r\n                return 'sex';\r\n            case 6:\r\n                return 'sab';\r\n        }\r\n    };\r\n\r\n\r\n    const getFuncionamento = async () => {\r\n        const response = await apiFetchGet(`/horariosVisible/${localStorage.getItem('id_empresa')}`);\r\n        setFuncionando(response.data.horario_funcionamento);\r\n        setHorarios(response.data.rows);\r\n        if (!response.data.horario_funcionamento)\r\n            dispatch(addFormAction({ ...form, check_agendamento: !response.data.horario_funcionamento }));\r\n        setLoading(false);\r\n    }\r\n\r\n    function validation() {\r\n        if (!check_agendamento)\r\n            return;\r\n\r\n        if (!horarios.faixa_1)\r\n            return 'Nenhum horário disponível';\r\n\r\n        if (check_agendamento && !dh_agendamento)\r\n            return 'Informe a data do agendamento';\r\n\r\n        const date = new Date(dh_agendamento);\r\n\r\n        const isPossibleToSchedule = isDateScheduleable(getDayAbreviation(date.getDay()), date);\r\n\r\n        let errorAgen = false;\r\n        produtos_pedidos.forEach(produto => {\r\n            if (produto.info === \"opcoes\") {\r\n                if (check_agendamento && !produto.agendamento) {\r\n                    console.log('teste3');\r\n                    setError(`O produto ${produto.descricao} não esta disponível para agendamento.`);\r\n                    errorAgen = true;\r\n                }\r\n            };\r\n        });\r\n        if (errorAgen) return true;\r\n\r\n        const success = isPossibleToSchedule.some(item => !item.error);\r\n\r\n        if (success)\r\n            return;\r\n\r\n        const hasValidInterval = isPossibleToSchedule.some(item => item.interval);\r\n\r\n        if (!hasValidInterval) {\r\n            setError('Não há faixas de horários disponíveis para o dia selecionado!');\r\n            return;\r\n        }\r\n\r\n        const validIntervals = isPossibleToSchedule.reduce((acc, item) => {\r\n            if (!item.interval)\r\n                return acc;\r\n\r\n            const start = format(item.interval.start, 'HH:mm');\r\n            const end = format(item.interval.end, 'HH:mm');\r\n\r\n            if (!acc)\r\n                return `${start} - ${end}`;\r\n\r\n            return acc + `, ou ${start} - ${end}`;\r\n        }, false);\r\n\r\n        setError(`Horário indisponível selecione um período entre ${validIntervals}`);\r\n        return;\r\n    };\r\n\r\n    function isDateScheduleable(day, date, faixa = 1) {\r\n\r\n        const active = horarios[`acesso_${day}_faixa_${faixa}`];\r\n        const isFaixa = horarios[`faixa_${faixa}`];\r\n\r\n        if (active === undefined)\r\n            return [];\r\n\r\n        if (!active || !isFaixa)\r\n            return [{ error: true }, ...isDateScheduleable(day, date, faixa + 1)];\r\n\r\n        const initialTime = parse(\r\n            horarios[`hora_fun_ini_${day}_faixa_${faixa}`],\r\n            'HH:mm:ss',\r\n            date\r\n        );\r\n\r\n        const finalTime = parse(\r\n            horarios[`hora_fun_fim_${day}_faixa_${faixa}`],\r\n            'HH:mm:ss',\r\n            date\r\n        );\r\n\r\n        const start = addHours(initialTime, 1);\r\n        let end = finalTime;\r\n\r\n        if (isBefore(end, start))\r\n            end = addDays(end, 1);\r\n\r\n        end = addHours(end, -1);\r\n\r\n        if (isBefore(end, start), isBefore(end, new Date()))\r\n            return [{ error: true }, ...isDateScheduleable(day, date, faixa + 1)];\r\n\r\n        const interval = { start, end };\r\n\r\n        const isInInterval = isWithinInterval(date, interval);\r\n\r\n        if (isInInterval)\r\n            return [{ error: false }];\r\n\r\n        const error = { error: true, interval };\r\n\r\n        if (faixa > 3)\r\n            return [error];\r\n\r\n        return [error, ...isDateScheduleable(day, date, faixa + 1)];\r\n    }\r\n\r\n    function handleAgendamento(e) {\r\n        if (e.target.checked)\r\n            return dispatch(addFormAction({ ...form, check_agendamento: e.target.checked }));\r\n        const { check_agendamento, dh_agendamento, ...rest } = form;\r\n        return dispatch(addFormAction(rest));\r\n    };\r\n\r\n    async function getStartDate() {\r\n        const response = await apiFetchGet(`date-servidor`);\r\n        dispatch(\r\n            addFormAction({\r\n                ...form,\r\n                dh_start_atendimento: response.data.date,\r\n                tipo_atendimento: 'SAC',\r\n                protocolo: moment().unix()\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...{ title, setStep, countSteps, step, validation, getStartDate }}\r\n        >\r\n            <CRow>\r\n                <CCol xs=\"8\" lg=\"4\">\r\n                    <CLabel>Deseja agendar o pedido?</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"4\" lg=\"8\">\r\n                    <CSwitch\r\n                        color=\"success\"\r\n                        shape=\"pill\"\r\n                        checked={check_agendamento}\r\n                        onChange={funcionando && handleAgendamento}\r\n                        disabled={!funcionando}\r\n                    />\r\n                </CCol>\r\n                {\r\n                    check_agendamento &&\r\n                    <CCol xs=\"12\" lg=\"12\">\r\n                        <CFormGroup row>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <CLabel>Data Agendamento</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <CInput\r\n                                    placeholder={\"Data do agendamento\"}\r\n                                    onChange={e => dispatch(addFormAction({ ...form, dh_agendamento: e.target.value }))}\r\n                                    value={dh_agendamento}\r\n                                    type='datetime-local'\r\n                                    min={format(new Date(), \"yyyy-MM-dd'T'HH:mm\")}\r\n                                />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                }\r\n                {\r\n                    error &&\r\n                    <CCol xs=\"12\" lg=\"12\">\r\n                        <Error text={error} />\r\n                    </CCol>\r\n                }\r\n            </CRow>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ScheduleOrderComponent;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput\r\n} from '@coreui/react';\r\nimport InputMask from 'react-input-mask';\r\nimport { Label } from '../../../../components/TextsComponents';\r\n\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nimport Card from '../../../../components/CardFinish/Card';\r\n\r\nconst ChoosePhoneComponent = ({ title, setStep, countSteps, step }) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { telefone_cliente } = form;\r\n\r\n    function validation() {\r\n        if (!telefone_cliente)\r\n            return true;\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...{ title, setStep, countSteps, step, validation }}\r\n        >\r\n            <CRow>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <Label style={{ color: 'red' }}>*Informe um número de whatsapp valido</Label>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Informe seu número de whatsapp: </CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <InputMask\r\n                                mask={'(99) 99999-9999'}\r\n                                value={telefone_cliente}\r\n                                onChange={e => dispatch(addFormAction({ ...form, telefone_cliente: e.target.value }))}\r\n                            >\r\n                                {(inputProps) =>\r\n                                    <CInput\r\n                                        {...inputProps}\r\n                                        placeholder={\"Telefone\"}\r\n                                        type='text'\r\n                                    />\r\n                                }\r\n                            </InputMask>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChoosePhoneComponent;","export const teclas = (evt) => {\r\n    evt = window.event;\r\n    var tecla = evt.keyCode;\r\n\r\n\r\n    if (tecla > 47 && tecla < 58) {\r\n        alert('Nome não pode conter caracteres numéricos!');\r\n        evt.preventDefault();\r\n    }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n\r\n    let cDate = new Date(date);\r\n\r\n    let months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n\r\n    let cDay = cDate.getDate();\r\n    let CMonth = cDate.getMonth();\r\n    let cYear = cDate.getFullYear();\r\n    let cHour = cDate.getHours();\r\n    let cMin = cDate.getMinutes();\r\n\r\n    return `${cDay}-${months[CMonth]}-${cYear}  ${cHour <= 9 ? '0' + cHour : cHour}:${cMin <= 9 ? '0' + cMin : cMin}`\r\n};","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { teclas } from '../../../../helpers/functions';\r\n\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel\r\n} from '@coreui/react';\r\n\r\nimport Card from '../../../../components/CardFinish/Card';\r\n\r\nimport { apiFetchGet } from '../../../../helpers/helper';\r\n\r\nconst ClientFormComponent = ({ title, setStep, countSteps, step }) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { empresa, tipo_atendimento, tipo_telefone, telefone_cliente = '', protocolo, nome_cliente = '' } = form;\r\n\r\n    function validation() {\r\n        if (!nome_cliente)\r\n            return true;\r\n        return false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!nome_cliente) getUser();\r\n    }, []);\r\n\r\n    async function getUser() {\r\n        if (telefone_cliente.replace(/_/gi, '').length < 14)\r\n            return;\r\n        const response = await apiFetchGet(`enderecosVisible?address=${telefone_cliente}`);\r\n\r\n        const historico_atendimentos = response.data;\r\n\r\n        if (response.data.length === 0)\r\n            return;\r\n\r\n        const { nome_cliente, endereco, numero, bairro, cep, cidade, uf, complemento } = response.data[0];\r\n\r\n        dispatch(addFormAction({\r\n            ...form, nome_cliente, endereco, numero, bairro, cep, cidade, uf, complemento, historico_atendimentos\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...{ title, setStep, countSteps, step, validation }}\r\n        >\r\n            <CRow>\r\n                <CCol xs=\"12\" lg=\"6\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Empresa</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CInput \r\n                                value={empresa && empresa.nome_fantasia}\r\n                                disabled\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"6\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Protocolo</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CInput \r\n                                value={protocolo}\r\n                                disabled\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Nome do Cliente</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CInput \r\n                                value={nome_cliente}\r\n                                onKeyPress={e => teclas(e)}\r\n                                onChange={e => dispatch(addFormAction({ ...form, nome_cliente: e.target.value }))}\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"6\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Tipo Telefone</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CInput \r\n                                value={tipo_telefone}\r\n                                disabled\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"6\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Telefone</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CInput \r\n                                value={telefone_cliente}\r\n                                disabled\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ClientFormComponent;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Map, TileLayer, Polygon } from 'react-leaflet';\r\nimport { polygon, centroid } from '@turf/turf';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel\r\n} from '@coreui/react';\r\nimport Select from 'react-select';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport { apiFetchGet } from '../../../../helpers/helper';\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nimport Cart from '../../../../components/CardFinish/Card';\r\n\r\nconst AdressFormComponent = ({ title, setStep, countSteps, step }) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { telefone_cliente, tipo_retirada, empresa, uf, cep, cidade, bairro, endereco, numero, complemento, taxa_de_entrega, historico_atendimentos = [], id } = form;\r\n\r\n    const [taxas, setTaxas] = useState([]);\r\n\r\n    const options = [\r\n        { value: 'ENTREGA', label: 'Entrega' },\r\n        { value: 'LOCAL', label: 'Retirada balcão' }\r\n    ];\r\n\r\n    const ufs = [\r\n        { value: 'AC', label: 'Acre' },\r\n        { value: 'AL', label: 'Alagoas' },\r\n        { value: 'AP', label: 'Amapá' },\r\n        { value: 'AM', label: 'Amazonas' },\r\n        { value: 'BA', label: 'Bahia' },\r\n        { value: 'CE', label: 'Ceará' },\r\n        { value: 'DF', label: 'Distrito Federal' },\r\n        { value: 'ES', label: 'Espirito Santo' },\r\n        { value: 'GO', label: 'Goiás' },\r\n        { value: 'MA', label: 'Maranhão' },\r\n        { value: 'MS', label: 'Mato Grosso do Sul' },\r\n        { value: 'MT', label: 'Mato Grosso' },\r\n        { value: 'MG', label: 'Minas Gerais' },\r\n        { value: 'PA', label: 'Pará' },\r\n        { value: 'PB', label: 'Paraíba' },\r\n        { value: 'PR', label: 'Paraná' },\r\n        { value: 'PE', label: 'Pernambuco' },\r\n        { value: 'PI', label: 'Piauí' },\r\n        { value: 'RJ', label: 'Rio de Janeiro' },\r\n        { value: 'RN', label: 'Rio Grande do Norte' },\r\n        { value: 'RS', label: 'Rio Grande do Sul' },\r\n        { value: 'RO', label: 'Rondônia' },\r\n        { value: 'RR', label: 'Roraima' },\r\n        { value: 'SC', label: 'Santa Catarina' },\r\n        { value: 'SP', label: 'São Paulo' },\r\n        { value: 'SE', label: 'Sergipe' },\r\n        { value: 'TO', label: 'Tocantins' }\r\n    ];\r\n\r\n\r\n    function validation() {\r\n        if (tipo_retirada === 'LOCAL')\r\n            return false;\r\n        if (!tipo_retirada)\r\n            return 'Favor preencher o tipo da entrega';\r\n        if (taxa_de_entrega === undefined || taxa_de_entrega === false)\r\n            return 'Taxa de entrega inválida';\r\n        if (!cep || cep.length !== 9)\r\n            return 'Cep inválido';\r\n        if (!endereco || endereco.trim().length === 0)\r\n            return 'Rua inválida';\r\n        if (!numero || numero.trim().length === 0)\r\n            return 'Número inválido';\r\n        if (!bairro || bairro.trim().length === 0)\r\n            return 'Bairro inválido';\r\n        if (!cidade || cidade.trim().length === 0)\r\n            return 'Cidade inválida';\r\n        if (!uf || uf.trim().length === 0)\r\n            return 'Estado inválido';\r\n        return false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tipo_retirada === 'LOCAL') {\r\n            const {\r\n                taxa_de_entrega,\r\n                cep,\r\n                endereco,\r\n                numero,\r\n                bairro,\r\n                cidade,\r\n                uf,\r\n                complemento,\r\n                ...rest\r\n            } = form;\r\n            dispatch(addFormAction(rest));\r\n        }\r\n    }, [tipo_retirada]);\r\n\r\n    useEffect(() => {\r\n        getTaxasDeEntregas();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!endereco) getUser();\r\n    }, [tipo_retirada]);\r\n\r\n    async function handleCepChange(e) {\r\n        const cep = e.target.value;\r\n        dispatch(addFormAction({ ...form, cep }));\r\n        if (!cep || cep.replace(/_/gi, '').length !== 9)\r\n            return;\r\n\r\n        const response = await apiFetchGet(`cepVisible?ceps=${cep}`);\r\n\r\n        const { logradouro, cidade, uf, bairro, tipo_logradouro } = response.data;\r\n\r\n        dispatch(addFormAction({ ...form, uf, cep, cidade, bairro, endereco: `${tipo_logradouro} ${logradouro}` }));\r\n    }\r\n\r\n    async function getUser() {\r\n        if (telefone_cliente.replace(/_/gi, '').length < 14)\r\n            return;\r\n\r\n        const response = await apiFetchGet(`enderecosVisible?address=${telefone_cliente}`);\r\n\r\n        const historico_atendimentos = response.data;\r\n\r\n        if (response.data.length === 0)\r\n            return;\r\n\r\n        const { endereco, numero, bairro, cep, cidade, uf, complemento } = response.data[0];\r\n\r\n        dispatch(addFormAction({ ...form, endereco, numero, bairro, cep, cidade, uf, complemento, historico_atendimentos }));\r\n    }\r\n\r\n    async function getTaxasDeEntregas() {\r\n\r\n        const response = await apiFetchGet(`taxaVisible/${empresa.id}?days=true`);\r\n\r\n        setTaxas(response.data.map(taxa => (\r\n            {\r\n                label: `${taxa.bairro_cidade_st} - R$ ${taxa.valor.toFixed(2)} | ${taxa.tempo_entrega} minutos`,\r\n                value: { valor: taxa.valor, tempo_entrega: taxa.tempo_entrega, id: taxa.id, coordenadas: taxa.coordenadas }\r\n            }\r\n        )\r\n\r\n        ));\r\n    }\r\n\r\n    function handleChangeTaxaDeEntrega(e) {\r\n\r\n        const { valor, tempo_entrega, id, coordenadas } = e.value;\r\n\r\n\r\n        dispatch(addFormAction(\r\n            { ...form, taxa_de_entrega: valor, tempo_entrega, id, coordenadas: coordenadas ? JSON.parse(coordenadas) : null })\r\n        );\r\n    };\r\n\r\n    const getCenter = () => {\r\n        const coordinates = form.coordenadas[0];\r\n        coordinates[coordinates.length] = coordinates[0];\r\n\r\n        const [longitude, latitude] = centroid(polygon([coordinates.map(({ lat, lng }) => [lng, lat])])).geometry.coordinates;\r\n\r\n        return [latitude, longitude];\r\n    };\r\n\r\n    return (\r\n        <Cart\r\n            {...{ title, setStep, countSteps, step, validation, showAlert: true }}\r\n        >\r\n            <CRow>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Tipo de Entrega</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Select\r\n                                options={options}\r\n                                placeholder=\"Selecione o tipo da entrega\"\r\n                                value={options.find(option => option.value === tipo_retirada)}\r\n                                onChange={e => dispatch(addFormAction({ ...form, tipo_retirada: e.value }))}\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                {\r\n                    tipo_retirada === 'ENTREGA' &&\r\n                    <>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Taxa de Entrega</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <Select\r\n                                        options={taxas}\r\n                                        placeholder=\"Taxa de Entrega\"\r\n                                        value={taxas.find(option => option.value.id === id)}\r\n                                        onChange={handleChangeTaxaDeEntrega}\r\n                                        maxMenuHeight={130}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        {\r\n                            form.coordenadas &&\r\n                            <CCol xs=\"12\" lg=\"12\"\r\n                                style={{\r\n                                    height: '400px',\r\n                                    width: '100%',\r\n                                    marginBottom: '40px'\r\n                                }}\r\n                            >\r\n                                <CRow\r\n                                    style={{\r\n                                        height: '400px',\r\n                                        width: '100%'\r\n                                    }}\r\n                                >\r\n                                    <CCol xs=\"12\" lg=\"12\">\r\n                                        <CLabel>Área de Entrega</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" lg=\"12\"\r\n                                        style={{\r\n                                            height: '400px',\r\n                                            width: '100%',\r\n                                            marginBottom: '20px'\r\n                                        }}\r\n                                    >\r\n                                        <Map\r\n                                            center={getCenter()}\r\n                                            zoom={15}\r\n                                            zoomControl={false}\r\n                                            style={{ width: '90%', height: '400px', margin: '0 auto', zIndex: '0' }}\r\n                                        >\r\n                                            <TileLayer\r\n                                                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                                url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n                                            />\r\n                                            <Polygon positions={form.coordenadas} />\r\n                                        </Map>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCol>\r\n                        }\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>CEP</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <InputMask\r\n                                        mask={'99999-999'}\r\n                                        value={cep}\r\n                                        onChange={handleCepChange}\r\n                                    >\r\n                                        {(inputProps) =>\r\n                                            <CInput\r\n                                                {...inputProps}\r\n                                                placeholder={\"Cep\"}\r\n                                                type='text'\r\n                                            />\r\n                                        }\r\n                                    </InputMask>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Rua</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CInput\r\n                                        onChange={e => dispatch(addFormAction({ ...form, endereco: e.target.value }))}\r\n                                        value={endereco}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Número</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CInput\r\n                                        onChange={e => dispatch(addFormAction({ ...form, numero: e.target.value }))}\r\n                                        value={numero}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Bairro</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CInput\r\n                                        onChange={e => dispatch(addFormAction({ ...form, bairro: e.target.value }))}\r\n                                        value={bairro}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Cidade</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CInput\r\n                                        onChange={e => dispatch(addFormAction({ ...form, cidade: e.target.value }))}\r\n                                        value={cidade}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"6\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Estado</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <Select\r\n                                        options={ufs}\r\n                                        placeholder=\"Estado\"\r\n                                        value={ufs.find(option => option.value === uf)}\r\n                                        onChange={e => dispatch(addFormAction({ ...form, uf: e.value }))}\r\n                                        maxMenuHeight={190}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CLabel>Referência</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <CInput\r\n                                        value={complemento}\r\n                                        onChange={e => dispatch(addFormAction({ ...form, complemento: e.target.value }))}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CCol>\r\n                    </>\r\n                }\r\n            </CRow>\r\n        </Cart>\r\n    );\r\n};\r\n\r\nexport default AdressFormComponent;\r\n","import React from 'react';\r\n\r\nconst UploadComponent = ({ children, isDragActive, getRootProps }) => {\r\n\r\n    return (\r\n        <div\r\n            {...getRootProps()}\r\n            style={{\r\n                width: '100%',\r\n                backgroundColor: isDragActive ? '#028AF4' : '#f0f0f7',\r\n                height: '150px',\r\n                outline: 'none',\r\n                cursor: 'pointer',\r\n                transition: 'all.2s ease-in-out',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                border: `2px ${isDragActive ? 'solid' : 'dashed'} #028AF4`,\r\n                opacity: `${isDragActive ? '0.8' : '1'}`,\r\n                color: `${isDragActive && 'white'}`,\r\n                fontWeight: 'bold',\r\n                borderRadius: '5px'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadComponent;","import React from 'react';\r\n\r\nconst ImageComponent = ({ children }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                top: '0',\r\n                right: '0',\r\n                width: '300px',\r\n                height: '300px',\r\n                zIndex: '5',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                borderRadius: '3px',\r\n                cursor: 'pointer'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageComponent;","import React from 'react';\r\n\r\nconst RemoveComponent = ({ children, removeImage }) => {\r\n\r\n    return (\r\n        <div\r\n            onClick={() => removeImage()}\r\n            style={{\r\n                position: 'absolute',\r\n                top: '0',\r\n                right: '0',\r\n                width: '40px',\r\n                height: '40px',\r\n                zIndex: '5',\r\n                backgroundColor: '#3F51B5',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                borderRadius: '3px',\r\n                cursor: 'pointer'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoveComponent;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel\r\n} from '@coreui/react';\r\nimport Upload from './Upload';\r\nimport ImageBox from './Image';\r\nimport Select from 'react-select';\r\nimport RemoveBox from './RemoveIcon';\r\nimport CIcon from '@coreui/icons-react';\r\nimport Change from 'react-currency-input';\r\n\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nimport { apiFetchGet, apiFecthPost } from '../../../../helpers/helper';\r\n\r\nimport Card from '../../../../components/CardFinish/Card';\r\n\r\nconst PaymentComponent = ({ title, setStep, countSteps, step }) => {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { tipo_pagamento, troco = 0, empresa, tipo_cartao, image } = form;\r\n\r\n    const [formas, setFormas] = useState([]);\r\n    const [linksPagamento, setLinksPagamento] = useState([]);\r\n    const [preview, setPreview] = useState(null);\r\n    const [imageTest, setImageT] = useState();\r\n\r\n    useEffect(() => {\r\n        if (tipo_pagamento === 'DINHEIRO') {\r\n            const { tipo_cartao, id_comprovante, ...rest } = form;\r\n            dispatch(addFormAction(rest));\r\n        } else if (tipo_pagamento === 'CARTÃO') {\r\n            const { troco, id_comprovante, ...rest } = form;\r\n            dispatch(addFormAction(rest));\r\n        } else if (tipo_pagamento === 'LINK PAGAMENTO') {\r\n            const { troco, tipo_cartao, ...rest } = form;\r\n            dispatch(addFormAction(rest));\r\n        }\r\n    }, [tipo_pagamento]);\r\n\r\n    useEffect(() => {\r\n        getPreview();\r\n    }, [imageTest]);\r\n\r\n    const options = [\r\n        { value: 'DINHEIRO', label: 'Dinheiro' },\r\n        { value: 'CARTÃO', label: 'Cartão' },\r\n        { value: 'CARTÃO DÉBITO', label: 'Cartão Débito' },\r\n        { value: 'CARTÃO CRÉDITO', label: 'Cartão Crédito' },\r\n        { value: 'LINK PAGAMENTO', label: 'Pagamentos Digitais' }\r\n    ];\r\n\r\n    const onDrop = useCallback(handleImagem, []);\r\n\r\n    const getFormasPagamentoCartao = async () => {\r\n        const response = await apiFetchGet(`empresasVisible/single/${empresa.id}`);\r\n\r\n        const {\r\n            cart_visa,\r\n            cart_master_card,\r\n            cart_elo,\r\n            cart_sodexo,\r\n            cart_hipercard,\r\n            cart_american_express,\r\n            cart_diners_club,\r\n            cart_alelo,\r\n            cart_ticket,\r\n            cart_amex,\r\n            cart_vr,\r\n            cart_cabal\r\n        } = response.data;\r\n\r\n        const formas = {\r\n            cart_visa,\r\n            cart_master_card,\r\n            cart_elo,\r\n            cart_sodexo,\r\n            cart_hipercard,\r\n            cart_american_express,\r\n            cart_diners_club,\r\n            cart_alelo,\r\n            cart_ticket,\r\n            cart_amex,\r\n            cart_vr,\r\n            cart_cabal\r\n        };\r\n\r\n        const keys = Object.keys(formas);\r\n\r\n        const options = keys.map(key => formas[key] && ({\r\n            label: key.replace('cart_', '').replace('_', ' '),\r\n            value: key\r\n        })).filter(option => option);\r\n\r\n        setFormas(options);\r\n    }\r\n\r\n    const getLinkPagamento = async () => {\r\n        const response = await apiFetchGet(`linkpgVisible/single/${empresa.id}?ativo=true`);\r\n\r\n        setLinksPagamento(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLinkPagamento();\r\n        getFormasPagamentoCartao();\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, disabled: imageTest });\r\n\r\n    function handleImagem(images) {\r\n        if (images.length === 0)\r\n            return;\r\n        setImageT(images[0]);\r\n    };\r\n\r\n    function getPreview() {\r\n        if (!imageTest)\r\n            return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(imageTest);\r\n        reader.onloadend = function () {\r\n            setPreview(reader.result);\r\n        }\r\n    };\r\n\r\n    async function validation() {\r\n        if (!tipo_pagamento)\r\n            return 'Forma de pagamento não informada!';\r\n        if (tipo_pagamento === 'LINK PAGAMENTO') {\r\n            const response = await handleUpload();\r\n\r\n            if (response)\r\n                return response;\r\n        }\r\n        return;\r\n    };\r\n\r\n    async function handleUpload() {\r\n        const formData = new FormData();\r\n\r\n        formData.append('files', imageTest);\r\n        dispatch(addFormAction({ ...form, image: imageTest }))\r\n\r\n        try {\r\n            const { data } = await apiFecthPost(\"file/comprovanteVisible\", formData);\r\n\r\n            dispatch(\r\n                addFormAction({\r\n                    ...form,\r\n                    id_comprovante: data[0].id,\r\n                    url_comprovante: data[0].url\r\n                })\r\n            );\r\n            return;\r\n        } catch (error) {\r\n            return 'Comprovante inválido';\r\n        }\r\n    };\r\n\r\n    function removeImage() {\r\n      setImageT();\r\n    };\r\n\r\n    function handleChange(event, maskedvalue, floatvalue) {\r\n        dispatch(addFormAction({ ...form, troco: maskedvalue }));\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...{ title, setStep, countSteps, step, validation }}\r\n        >\r\n            <CRow>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Forma de Pagamento</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Select\r\n                                options={options}\r\n                                placeholder=\"Selecione a forma de pagamento\"\r\n                                value={options.find(option => option.value === tipo_pagamento)}\r\n                                onChange={e => {dispatch(addFormAction({ ...form, tipo_pagamento: e.value }))}}\r\n                                maxMenuHeight={190}\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                {\r\n                    tipo_pagamento === 'DINHEIRO' &&\r\n                    <CCol xs=\"12\" lg=\"12\">\r\n                        <CFormGroup row>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <CLabel>Troco Para</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <Change\r\n                                    value={troco}\r\n                                    onChange={handleChange}\r\n                                    precision='2'\r\n                                    prefix='R$ '\r\n                                    style={{\r\n                                        height: '35px',\r\n                                        width: '100%',\r\n                                        border: '1px solid rgba(0, 0, 0, .2)',\r\n                                        borderRadius: '3px',\r\n                                        padding: '0 10px'\r\n                                    }}\r\n                                />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                }\r\n                {\r\n                    ['CARTÃO', 'CARTÃO CRÉDITO', 'CARTÃO DÉBITO'].includes(tipo_pagamento) &&\r\n                    <CCol xs=\"12\" lg=\"12\">\r\n                        <CFormGroup row>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <CLabel>Tipo Cartão</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <Select\r\n                                    options={formas}\r\n                                    placeholder=\"Selecionar Bandeiras\"\r\n                                    value={formas.find(option => option.value === tipo_cartao)}\r\n                                    onChange={e => dispatch(addFormAction({ ...form, tipo_cartao: e.value }))}\r\n                                    maxMenuHeight={130}\r\n                                />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                }\r\n                {\r\n                    tipo_pagamento === 'LINK PAGAMENTO' &&\r\n                    <CCol xs=\"12\" lg=\"12\">\r\n                        <CRow>\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                <CLabel>Links disponíveis</CLabel>\r\n                            </CCol>\r\n                            <CCol\r\n                                xs=\"12\"\r\n                                lg=\"12\"\r\n                                style={{\r\n                                    background: '#f0f0f7',\r\n                                    padding: '15px',\r\n                                    borderRadius: '3px'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    linksPagamento.map((\r\n                                        { tipo_link, url_pagamento, usuario_pagamento, senha_pagamento, cb_nome_banco,\r\n                                            cb_numero_banco, cb_cnpj_cpf, cb_agencia, cb_conta, cd_digito, cb_favorecido, cb_pix\r\n                                        }, index) => (\r\n                                        <CRow key={index}>\r\n                                            <CCol xs=\"12\" lg=\"12\">\r\n                                                <CLabel\r\n                                                    style={{ fontWeight: 'bold' }}\r\n                                                >Link para pagamento</CLabel>\r\n                                            </CCol>\r\n\r\n                                            <CCol\r\n                                                xs=\"12\"\r\n                                                lg=\"12\"\r\n                                                style={{\r\n                                                    margin: '10px 0px 0px 0px',\r\n                                                    borderBottom: '2px dotted black'\r\n                                                }}\r\n                                            >\r\n                                                <CRow>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Tipo do link: {tipo_link}</CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Usuário: {usuario_pagamento} </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Senha: {senha_pagamento} </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '5px' }}>\r\n                                                        <a href={url_pagamento} target='_blank'>Link</a>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCol>\r\n\r\n                                            <CCol xs=\"12\" lg=\"12\">\r\n                                                <CLabel\r\n                                                    style={{ fontWeight: 'bold', marginTop: '10px' }}\r\n                                                >Conta para transferência</CLabel>\r\n                                            </CCol>\r\n\r\n                                            <CCol\r\n                                                xs=\"12\"\r\n                                                lg=\"12\"\r\n                                                style={{\r\n                                                    margin: '10px 0px 0px 0px',\r\n                                                    borderBottom: '2px dotted black'\r\n                                                }}\r\n                                            >\r\n                                                <CRow>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Nome do banco:  {cb_nome_banco}</CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Número do banco:   {cb_numero_banco} </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Agência:   {cb_agencia} </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Conta:   {cb_conta}  </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>Dígito:  {cd_digito}  </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\">\r\n                                                        <CLabel>CPF ou CNPJ:   {cb_cnpj_cpf}  </CLabel>\r\n                                                    </CCol>\r\n                                                    <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '5px' }}>\r\n                                                        <CLabel>Favorecido:   {cb_favorecido}  </CLabel>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCol>\r\n\r\n                                            <CCol xs=\"12\" lg=\"12\">\r\n                                                <CLabel\r\n                                                    style={{ fontWeight: 'bold', marginTop: '10px' }}\r\n                                                >Pix</CLabel>\r\n                                            </CCol>\r\n\r\n                                            <CCol\r\n                                                xs=\"12\"\r\n                                                lg=\"12\"\r\n                                                style={{\r\n                                                    margin: '10px 0px 0px 0px',\r\n                                                    borderBottom: '2px dotted black'\r\n                                                }}\r\n                                            >\r\n                                                <CLabel>Chave PIX: {cb_pix} </CLabel>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    ))\r\n                                }\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow\r\n                            style={{\r\n                                marginTop: '10px'\r\n                            }}\r\n                        >\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ fontWeight: 'bold' }}>\r\n                                <CLabel>Comprovante</CLabel>\r\n                            </CCol>\r\n                            {\r\n                                imageTest ?\r\n                                    <CCol\r\n                                        xs=\"12\"\r\n                                        lg=\"12\"\r\n                                        style={{\r\n                                            width: '300px',\r\n                                            height: '300px',\r\n                                            position: 'relative'\r\n                                        }}\r\n                                    >\r\n                                        <ImageBox>\r\n                                            <RemoveBox removeImage={removeImage}>\r\n                                                <CIcon name=\"cil-trash\" size={25} style={{ color: 'white' }} />\r\n                                            </RemoveBox>\r\n                                            <img\r\n                                                style={{\r\n                                                    backgroundSize: 'contain',\r\n                                                    width: '100%',\r\n                                                    height: '100%'\r\n                                                }}\r\n                                                src={preview}\r\n                                            />\r\n                                        </ImageBox>\r\n                                    </CCol>\r\n                                    :\r\n                                    <Upload\r\n                                        {...{ isDragActive, getRootProps }}\r\n                                    >\r\n                                        <input {...getInputProps()} />\r\n                                        <CLabel style={{ padding: '10px' }}>\r\n                                            Arraste e solte uma imagem aqui ou clique para selecionar\r\n                                         </CLabel>\r\n                                    </Upload>\r\n                            }\r\n                        </CRow>\r\n                    </CCol>\r\n                }\r\n            </CRow>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PaymentComponent;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { Title, Text, Label } from '../../../../components/TextsComponents';\r\n\r\nimport { removeToCartAction } from '../../../../store/cart/actions';\r\nimport { addFormAction } from '../../../../store/form/actions';\r\nimport { formSelector } from '../../../../store/form/selectors';\r\n\r\nconst CartComponent = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const { produtos_pedidos, taxa_de_entrega } = form;\r\n\r\n    const [porcao, setPorcao] = useState(false);\r\n    const [adicionaisEscolhidos, setAdicionaisEscolhidos] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [sub_id, setSubId] = useState();\r\n\r\n    const increment = (item) => {\r\n        let produtos_pedidos = [];\r\n\r\n        if (item.info === 'adicionais' && !item.sub_id)\r\n            produtos_pedidos = incrementaAdicionalSemVinculo(item.id);\r\n        else\r\n            produtos_pedidos = incrementaAdicionalOuProdutoComVinculo(item.id, item.sub_id);\r\n\r\n        dispatch(addFormAction({\r\n            ...form,\r\n            produtos_pedidos\r\n        }));\r\n    }\r\n\r\n    const incrementaAdicionalSemVinculo = (id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.map(adicional => {\r\n            if (adicional.id === id && !adicional.sub_id)\r\n                return { ...adicional, quantity: adicional.quantity + 1 };\r\n            return adicional;\r\n        })\r\n\r\n        return produtos_pedidos;\r\n    }\r\n\r\n    const incrementaAdicionalOuProdutoComVinculo = (id, sub_id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.map(adicional => {\r\n            if (adicional.sub_id === sub_id && adicional.id === id)\r\n                return { ...adicional, quantity: adicional.quantity + 1 };\r\n            return adicional;\r\n        })\r\n\r\n        return produtos_pedidos;\r\n    }\r\n\r\n    const decrement = (item) => {\r\n        let produtos_pedidos = [];\r\n\r\n        if (item.quantity === 1)\r\n            return handleRemoveItemCart(item);\r\n        if (item.info === 'adicionais' && !item.sub_id)\r\n            produtos_pedidos = decrementaAdicionalSemVinculo(item.id);\r\n        else\r\n            produtos_pedidos = decrementaAdicionalOuProdutoComVinculo(item.id, item.sub_id);\r\n\r\n        dispatch(addFormAction({\r\n            ...form,\r\n            produtos_pedidos\r\n        }));\r\n    }\r\n\r\n    const decrementaAdicionalSemVinculo = (id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.map(adicional => {\r\n            if (adicional.id === id && !adicional.sub_id)\r\n                return { ...adicional, quantity: adicional.quantity - 1 }\r\n            return adicional\r\n        })\r\n\r\n        return produtos_pedidos\r\n    }\r\n\r\n    const decrementaAdicionalOuProdutoComVinculo = (id, sub_id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.map(adicional => {\r\n            if (adicional.sub_id === sub_id && adicional.id === id)\r\n                return { ...adicional, quantity: adicional.quantity - 1 }\r\n            return adicional\r\n        })\r\n\r\n        return produtos_pedidos;\r\n    }\r\n\r\n    const handleRemoveItemCart = (item) => {\r\n\r\n        let produtos_pedidos = [];\r\n\r\n        if (item.info === 'adicionais' && !item.sub_id)\r\n            produtos_pedidos = removerAdicionalPorId(item.id)\r\n        else if (item.info === 'adicionais' && item.sub_id)\r\n            produtos_pedidos = removerAdicionalPorSubId(item.id, item.sub_id)\r\n        else\r\n            produtos_pedidos = removerPorcaoPorSubId(item.sub_id)\r\n\r\n        dispatch(addFormAction({\r\n            ...form,\r\n            produtos_pedidos\r\n        }));\r\n        dispatch(removeToCartAction());\r\n    }\r\n\r\n    const removerAdicionalPorId = (id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.filter(adicional => adicional.id !== id || adicional.sub_id)\r\n\r\n        return produtos_pedidos\r\n    }\r\n\r\n    const removerAdicionalPorSubId = (id, sub_id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.filter(adicional => adicional.sub_id !== sub_id || adicional.id !== id)\r\n\r\n        return produtos_pedidos\r\n    }\r\n\r\n    const removerPorcaoPorSubId = (sub_id) => {\r\n        const produtos_pedidos = form.produtos_pedidos.filter(produto => produto.sub_id !== sub_id)\r\n\r\n        return produtos_pedidos\r\n    }\r\n\r\n    function getSubTotal() {\r\n        const total = produtos_pedidos.reduce((soma, { quantity, valor, sub_id, info, avulso }) => {\r\n            if (avulso)\r\n                return soma + quantity * valor;\r\n\r\n            if (info === 'adicionais')\r\n                return soma + 0;\r\n\r\n            const reduced = produtos_pedidos.reduce((soma, adicional) => {\r\n                if (adicional.sub_id === sub_id && adicional.info === 'adicionais')\r\n                    return soma + (adicional.valor * adicional.quantity);\r\n\r\n                return soma + 0;\r\n            }, 0);\r\n\r\n            return soma + (reduced + valor) * quantity;\r\n        }, 0);\r\n\r\n        return total;\r\n    }\r\n\r\n    function getTotal() {\r\n        return getSubTotal() + (taxa_de_entrega ?? 0);\r\n    }\r\n\r\n    function getAdicionaisEscolhidos(sub_id) {\r\n        const adicionaisEscolhidos = produtos_pedidos.filter(produto => {\r\n            if (produto.info === 'adicionais' && sub_id === produto.sub_id)\r\n                return produto;\r\n        });\r\n\r\n        setAdicionaisEscolhidos(adicionaisEscolhidos);\r\n    };\r\n\r\n    return (\r\n        <CCard>\r\n            <CCardBody>\r\n                <CRow>\r\n                    {\r\n                        produtos_pedidos.length === 0 ?\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '20px' }}>\r\n                                <CRow style={{ textAlign: 'center', height: '100%', alignItems: 'center' }}>\r\n                                    <CCol xs=\"12\" lg=\"12\">\r\n                                        <strong>\r\n                                            <text style={{ fontSize: '16px' }}>Nenhum produto encontrado </text>\r\n                                            <CIcon name=\"cil-warning\" width={26} />\r\n                                        </strong>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCol>\r\n                            :\r\n                            <CCol xs=\"12\" lg=\"12\">\r\n                                {\r\n                                    produtos_pedidos.map(produto => {\r\n                                        const { descricao, quantity, valor, porcao_produto, sub_id, info, avulso } = produto;\r\n                                        const name = info === 'adicionais' ? descricao : porcao_produto.nome_produto;\r\n                                        if (!avulso && info === 'adicionais')\r\n                                            return null;\r\n\r\n                                        return (\r\n                                            <CRow>\r\n                                                <CCol xs=\"8\" lg=\"8\">\r\n                                                    <Title size={'14px'}>{quantity}x {name} - {descricao}</Title>\r\n                                                </CCol>\r\n                                                <CCol xs=\"4\" lg=\"4\" style={{ justifyContent: 'flex-end', display: 'flex' }}>\r\n                                                    <Title size={'12px'}>R$ {(valor * quantity).toFixed(2)}</Title>\r\n                                                </CCol>\r\n                                                {\r\n                                                    produtos_pedidos.map((adicional, index) => {\r\n                                                        if (sub_id && adicional.sub_id === sub_id && adicional.info === 'adicionais' && !adicional.avulso)\r\n                                                            return (\r\n                                                                <CCol\r\n                                                                    xs=\"12\"\r\n                                                                    lg=\"12\"\r\n                                                                    key={index}\r\n                                                                    style={{\r\n                                                                        display: 'flex',\r\n                                                                        justifyContent: 'space-between',\r\n                                                                        paddingLeft: '25px'\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <Text>{adicional.quantity * quantity}x {adicional.descricao}</Text>\r\n                                                                    <Text>R$ {(adicional.valor * adicional.quantity * quantity).toFixed(2)}</Text>\r\n                                                                </CCol>\r\n                                                            )\r\n                                                    })\r\n                                                }\r\n                                            </CRow>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </CCol>\r\n                    }\r\n                </CRow>\r\n            </CCardBody>\r\n            <CCardBody style={{ borderTop: '1px solid', borderColor: '#d8dbe0' }}>\r\n                <CRow>\r\n                    <CCol xs=\"8\" lg=\"8\">\r\n                        <Label text=\"SubTotal\" />\r\n                    </CCol>\r\n                    <CCol xs=\"4\" lg=\"4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Label text={`R$ ${getSubTotal().toFixed(2)}`} />\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol xs=\"8\" lg=\"8\">\r\n                        <Label text=\"Taxa de Entrega\" />\r\n                    </CCol>\r\n                    <CCol xs=\"4\" lg=\"4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Label text={`R$ ${ taxa_de_entrega ? taxa_de_entrega.toFixed(2) : 0}`} />\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol xs=\"8\" lg=\"8\">\r\n                        <Label text=\"Total\" />\r\n                    </CCol>\r\n                    <CCol xs=\"4\" lg=\"4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Label text={`R$ ${getTotal().toFixed(2)}`} />\r\n                    </CCol>\r\n                </CRow>\r\n            </CCardBody>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default CartComponent;","import React, { useState } from 'react';\r\nimport Alert from 'sweetalert2';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format, addMinutes } from 'date-fns';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { formatDate } from '../../../../helpers/functions';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CInput,\r\n    CSwitch,\r\n    CFormGroup,\r\n    CLabel,\r\n    CTextarea\r\n} from '@coreui/react';\r\nimport { Title, Text } from '../../../../components/TextsComponents';\r\n\r\nimport { formSelector } from '../../../../store/form/selectors';\r\nimport { clearCartAction } from '../../../../store/cart/actions';\r\nimport { apiFetchWhatsApp, apiFecthPost } from '../../../../helpers/helper';\r\nimport { addFormAction, clearFormAction } from '../../../../store/form/actions';\r\n\r\nimport Card from '../../../../components/CardFinish/Card';\r\nimport Cart from './Cart';\r\n\r\nconst OrderSumaryComponent = ({ title, setStep, countSteps, step }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(formSelector);\r\n\r\n    const {\r\n        tipo_atendimento,\r\n        protocolo,\r\n        nome_cliente,\r\n        telefone_cliente,\r\n        tipo_telefone,\r\n        tipo_retirada,\r\n        endereco,\r\n        numero,\r\n        bairro,\r\n        cidade,\r\n        uf,\r\n        complemento,\r\n        tipo_pagamento,\r\n        troco,\r\n        tipo_cartao,\r\n        check_agendamento,\r\n        dh_agendamento,\r\n        tempo_entrega = 0,\r\n        tempo_producao,\r\n        produtos_pedidos,\r\n        empresa,\r\n        nota_fiscal,\r\n        cpf_cnpj_nfs,\r\n        observacoes,\r\n        tempo_adicional = 0,\r\n        taxa_de_entrega = 0,\r\n        url_comprovante\r\n    } = form;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function finish() {\r\n        createAttendance();\r\n    };\r\n\r\n    async function sendWhatsApp() {\r\n        let produtos = '';\r\n        produtos_pedidos.map(produto => {\r\n            const { descricao, quantity, valor, porcao_produto, sub_id, info, avulso } = produto;\r\n            const name = info === 'adicionais' ? descricao : porcao_produto.nome_produto;\r\n\r\n            if (!avulso && info === 'adicionais')\r\n                return '';\r\n\r\n            produtos += `${quantity}x ${name} - ${descricao} R$ ${(valor * quantity).toFixed(2)}\\n`;\r\n\r\n            produtos_pedidos.map((adicional, index) => {\r\n                if (sub_id && adicional.sub_id === sub_id && adicional.info === 'adicionais' && !adicional.avulso)\r\n                    produtos += `   ${adicional.quantity * quantity}x ${adicional.descricao} R$ ${(adicional.valor * adicional.quantity * quantity).toFixed(2)}\\n`;\r\n            });\r\n            produtos += `\\n\\n`;\r\n        });\r\n        const message = `*PEDIDO ${protocolo}*\\nAgendamento: ${check_agendamento ? 'SIM' : 'NÃO'}\\nData do Agendamento: ${dh_agendamento ? format(new Date(dh_agendamento), 'dd/MM/yyyy HH:mm') : 'Sem Informação'}\\n\\n*Dados do Cliente*\\nNome: ${nome_cliente}\\nTipo Telefone: ${tipo_telefone}\\nNúmero: ${telefone_cliente}\\n\\n*Dados de Entrega*\\nTipo de Entrega: ${tipo_retirada}\\nEndereço: ${(endereco ? `${endereco} - ${numero}, ${bairro}, ${cidade} - ${uf}` : 'Sem Informação')}\\nRefêrencia: ${complemento ?? 'Sem Informação'}\\n\\n*Produtos*\\n\\n${produtos}\\n*Pagamento*\\nTipo: ${tipo_pagamento}\\n${troco > 0 ? `Troco para: R$ ${troco.toFixed(2)}` : (tipo_cartao ? `Bandeira: ${tipo_cartao.replace('cart_', '').replace('_', ' ')}` : '')}\\n\\nSubTotal: R$ ${getSubTotal().toFixed(2)}\\nTaxa de Entrega: R$ ${taxa_de_entrega.toFixed(2)}\\n*Total:* R$ ${getTotal().toFixed(2)}`;\r\n\r\n        let celular = telefone_cliente.replace(/[^a-z0-9]/gi, \"\");\r\n\r\n        const credentials = JSON.parse(localStorage.getItem('info_boot'));\r\n\r\n        let formData = new FormData();\r\n        formData.append('email', credentials ? credentials.email : '');\r\n        formData.append('token', credentials ? credentials.token : '');\r\n        formData.append('idapp', credentials ? credentials.idapp : '');\r\n        formData.append('idmsg', protocolo);\r\n        formData.append('whatsapp', `55${celular}`);\r\n        formData.append('mensagem', message);\r\n        if (url_comprovante) {\r\n            formData.append('midia', 'imagem');\r\n            formData.append('url_anexo', `http://powerindicaassociadoapi.kinghost.net:21249/delivery${url_comprovante}`);\r\n        } else {\r\n            formData.append('midia', 'texto');\r\n        };\r\n\r\n        await apiFetchWhatsApp(formData);\r\n    };\r\n\r\n    async function createAttendance() {\r\n        setLoading(true);\r\n        try {\r\n            await apiFecthPost('atendimentoVisible', {\r\n                ...form,\r\n                id_empresa: empresa.id,\r\n                tempo_producao: tipo_retirada === 'LOCAL' ? Number(tempo_producao) + Number(tempo_adicional) : Number(tempo_entrega) + Number(tempo_adicional),\r\n                tempo_adicional: tempo_adicional,\r\n                id_user: '15cdd7af-ad7b-44bc-8d49-fdc73ac54696',\r\n                user: 'power'\r\n            });\r\n            setLoading(false);\r\n            sendWhatsApp();\r\n            history.push('/finish');\r\n            dispatch(clearFormAction());\r\n            dispatch(clearCartAction());\r\n        } catch (error) {\r\n            setLoading(false);\r\n            if (error.response) {\r\n                if (error.response.data.message.errors)\r\n                    Alert.fire('Erro', error.response.data.message.errors[0].message, 'error');\r\n            }\r\n        }\r\n    };\r\n\r\n    function handleSetNotaFiscal(e) {\r\n\r\n        if (e.target.checked)\r\n            return dispatch(addFormAction({ ...form, nota_fiscal: e.target.checked }));\r\n        const { nota_fiscal, cpf_cnpj_nfs, ...rest } = form;\r\n        return dispatch(addFormAction(rest));\r\n\r\n    };\r\n\r\n    function estimateTime(min) {\r\n        return format(addMinutes(new Date(), min), 'dd/MM HH:mm');\r\n    };\r\n\r\n    function getSubTotal() {\r\n        const total = produtos_pedidos.reduce((soma, { quantity, valor, sub_id, info, avulso }) => {\r\n            if (avulso)\r\n                return soma + quantity * valor;\r\n\r\n            if (info === 'adicionais')\r\n                return soma + 0;\r\n\r\n            const reduced = produtos_pedidos.reduce((soma, adicional) => {\r\n                if (adicional.sub_id === sub_id && adicional.info === 'adicionais')\r\n                    return soma + (adicional.valor * adicional.quantity);\r\n\r\n                return soma + 0;\r\n            }, 0);\r\n\r\n            return soma + (reduced + valor) * quantity;\r\n        }, 0);\r\n\r\n        return total;\r\n    };\r\n\r\n    function getTotal() {\r\n        return getSubTotal() + taxa_de_entrega;\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            {...{ title, setStep, countSteps, step, finish }}\r\n        >\r\n            <CRow>\r\n                <CCol\r\n                    xs=\"12\"\r\n                    lg=\"6\"\r\n                    style={{\r\n                        marginBottom: '10px'\r\n                    }}\r\n                >\r\n                    <CRow\r\n                        className=\"section-border\"\r\n                    >\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginTop: '2px' }}>\r\n                            <Title>Dados do Atendimento</Title>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Text>Tipo Atendimento: {tipo_atendimento}</Text>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Text>Protocolo: {protocolo}</Text>\r\n                        </CCol>\r\n                        {\r\n                            check_agendamento &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Agendado para: {formatDate(dh_agendamento)}</Text>\r\n                            </CCol>\r\n                        }\r\n                        {\r\n                            tipo_retirada === 'LOCAL' && !check_agendamento &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Previsão entrega: {estimateTime(Number(tempo_producao) + Number(tempo_adicional))}</Text>\r\n                            </CCol>\r\n                        }\r\n                        {\r\n                            tipo_retirada === 'ENTREGA' && !check_agendamento &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Previsão entrega: {estimateTime(Number(tempo_entrega) + Number(tempo_adicional))}</Text>\r\n                            </CCol>\r\n                        }\r\n                        {\r\n                            tempo_adicional !== 0 && !check_agendamento &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Tempo adicional: {tempo_adicional} minutos</Text>\r\n                            </CCol>\r\n                        }\r\n                    </CRow>\r\n                </CCol>\r\n                <CCol\r\n                    xs=\"12\"\r\n                    lg=\"6\"\r\n                    style={{\r\n                        marginBottom: '10px'\r\n                    }}\r\n                >\r\n                    <CRow\r\n                        className=\"section-border\"\r\n                    >\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginTop: '2px' }}>\r\n                            <Title>Dados do Cliente:</Title>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Text>Nome: {nome_cliente}</Text>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <Text>Tipo Telefone: {tipo_telefone}</Text>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                            <Text>Número: {telefone_cliente}</Text>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CCol>\r\n                <CCol\r\n                    xs=\"12\"\r\n                    lg=\"6\"\r\n                    style={{\r\n                        marginBottom: '10px'\r\n                    }}\r\n                >\r\n                    <CRow\r\n                        className=\"section-border\"\r\n                    >\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginTop: '2px' }}>\r\n                            <Title>Dados da Entrega:</Title>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                            <Text>Tipo da Entrega: {tipo_retirada}</Text>\r\n                        </CCol>\r\n                        {\r\n                            tipo_retirada !== 'LOCAL' &&\r\n                            <>\r\n                                <CCol xs=\"12\" lg=\"12\">\r\n                                    <Text>Endereço: {endereco}, {numero} - {bairro}, {cidade}/{uf}</Text>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                    <Text>Referência: {complemento}</Text>\r\n                                </CCol>\r\n                            </>\r\n                        }\r\n                    </CRow>\r\n                </CCol>\r\n                <CCol\r\n                    xs=\"12\"\r\n                    lg=\"6\"\r\n                    style={{\r\n                        marginBottom: '10px'\r\n                    }}\r\n                >\r\n                    <CRow\r\n                        className=\"section-border\"\r\n                    >\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginTop: '2px' }}>\r\n                            <Title>Pagamento:</Title>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                            <Text>Tipo: {tipo_pagamento}</Text>\r\n                        </CCol>\r\n                        {\r\n                            troco > 0 &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Troco para: {troco.toFixed(2)}</Text>\r\n                            </CCol>\r\n                        }\r\n                        {\r\n                            tipo_cartao &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <Text>Bandeira: {tipo_cartao.replace('cart_', '').replace('_', ' ')}</Text>\r\n                            </CCol>\r\n                        }\r\n                    </CRow>\r\n                </CCol>\r\n                <CCol\r\n                    xs=\"12\"\r\n                    lg=\"6\"\r\n                    style={{\r\n                        marginBottom: '10px'\r\n                    }}\r\n                >\r\n                    <CRow\r\n                        className=\"section-border\"\r\n                    >\r\n                        <CCol xs=\"12\" lg=\"12\" style={{ marginTop: '2px' }}>\r\n                            <Title>Cupom Fiscal:</Title>\r\n                        </CCol>\r\n                        <CCol xs=\"6\" lg=\"6\" style={{ marginBottom: '2px' }}>\r\n                            <Text>Deseja emitir o cupom fiscal do pedido?</Text>\r\n                        </CCol>\r\n                        <CCol xs=\"6\" lg=\"6\">\r\n                            <CSwitch\r\n                                color=\"success\"\r\n                                shape=\"pill\"\r\n                                checked={nota_fiscal}\r\n                                onChange={handleSetNotaFiscal}\r\n                            />\r\n                        </CCol>\r\n                        {\r\n                            nota_fiscal &&\r\n                            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '2px' }}>\r\n                                <CFormGroup row>\r\n                                    <CCol xs=\"12\" lg=\"12\">\r\n                                        <CLabel>CPF ou CNPJ</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" lg=\"12\">\r\n                                        <CInput\r\n                                            onChange={e => dispatch(addFormAction({ ...form, cpf_cnpj_nfs: e.target.value }))}\r\n                                            value={cpf_cnpj_nfs}\r\n                                        />\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        }\r\n                    </CRow>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <CFormGroup row>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CLabel>Observações para Entrega</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" lg=\"12\">\r\n                            <CTextarea \r\n                                rows=\"5\"\r\n                                onChange={e => dispatch(addFormAction({ ...form, observacoes: e.target.value }))}\r\n                            />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                    <Cart />\r\n                </CCol>\r\n            </CRow>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default OrderSumaryComponent;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CButton\r\n} from '@coreui/react';\r\n\r\n//Components\r\nimport ScheduleOrder from './components/ScheduleOrder';\r\nimport ChoosePhone from './components/ChoosePhone';\r\nimport ClientForm from './components/ClientForm';\r\nimport AddresForm from './components/AddressForm';\r\nimport Payment from './components/Payment';\r\nimport OrderSumary from './components/OrderSumary';\r\n\r\nconst FinishComponent = () => {\r\n    const history = useHistory();\r\n\r\n    const [step, setStep] = useState(0);\r\n\r\n    const steps = [\r\n        { label: 'Agendar Pedido', component: ScheduleOrder },\r\n        { label: 'Telefone', component: ChoosePhone },\r\n        { label: 'Dados do Atendimento', component: ClientForm },\r\n        { label: 'Forma de Entrega', component: AddresForm },\r\n        { label: 'Forma de Pagamento', component: Payment },\r\n        { label: 'Confirmar Pedido', component: OrderSumary },\r\n    ];\r\n\r\n    function getComponent() {\r\n        const Component = steps[step].component;\r\n        const label = steps[step].label;\r\n\r\n        return (\r\n            <Component {...{ title: label, setStep, countSteps: steps.length, step }} />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\" lg=\"12\" style={{ marginBottom: '50px' }}>\r\n                {getComponent()}\r\n            </CCol>\r\n            <CCol xs=\"12\" lg=\"12\" style={{\r\n                position: 'fixed',\r\n                bottom: '0',\r\n                left: '0',\r\n                backgroundColor: '#FFF',\r\n                borderTop: '1px solid #d8dbe0',\r\n                zIndex: '10'\r\n            }}>\r\n                <CButton\r\n                    onClick={() => history.goBack()}\r\n                    style={{ width: '100%', padding: '10px', margin: '10px 0' }}\r\n                    block\r\n                    color=\"primary\"\r\n                >\r\n                    Continuar Comprando\r\n                </CButton>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n};\r\n\r\nexport default FinishComponent;\r\n"],"sourceRoot":""}